# This is a sample deploy script for multiple schemas.

name: LiquibaseProDeploy

# Controls when the workflow will run
# The liquibase_deploy.yml must be in the default (main) branch to trigger manually.
on:
  workflow_dispatch:
    inputs:
      environment:
        description:  'Environment for deploy'
        required:  true
        default:  'TEST'
        type:  choice
        options:
        - TEST
        - PROD

env:
  ## Set environment variables
  ## These variables are set at the Repo level.
  LIQUIBASE_PRO_LICENSE_KEY: ${{secrets.LIQUIBASE_PRO_LICENSE_KEY}}
  LIQUIBASE_COMMAND_USERNAME: ${{secrets.LIQUIBASE_COMMAND_USERNAME}}
  LIQUIBASE_COMMAND_PASSWORD: ${{secrets.LIQUIBASE_COMMAND_PASSWORD}}
  ##
  ## The database URL is set at the environment level.
  LIQUIBASE_COMMAND_URL: ${{secrets.LIQUIBASE_COMMAND_URL}}
  ## 
  LIQUIBASE_COMMAND_CHANGELOG_FILE: ./changelogs/dbchangelog.xml
  ## LIQUIBASE_LOG_LEVEL: FINE


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Deploy_Job:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment }}

    steps:
    - uses: actions/checkout@v3
        
    - name: Review pending SQL changes for the AE schema
      uses: docker://liquibase/liquibase
      with:
        args: status --verbose --log-level=info --contexts=AE --default-schema-name=AE
        
    - name: Review pending SQL changes for the HE schema
      uses: docker://liquibase/liquibase
      with:
        args: status --verbose --log-level=info --contexts=HE --default-schema-name=HE
    
#    - name: Deploy AE schema changes to DEV
#      uses: docker://liquibase/liquibase
#      with:
#        args: update --contexts=AE --default-schema-name=AE

#    - name: Deploy HE schema changes to DEV
#      uses: docker://liquibase/liquibase
#      with:
#        args: update --contexts=HE --default-schema-name=HE
