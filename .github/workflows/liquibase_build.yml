# This is a sample build script showing how environment variables can be set from a vault

name: LiquibaseProBuild

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the cicd branch
  push:
    branches: [ cicd ]
  pull_request:
    branches: [ cicd ]

env:
  ## Set environment variables
  ## These variables are set at the Repo level
  LIQUIBASE_PRO_LICENSE_KEY: ${{secrets.LIQUIBASE_PRO_LICENSE_KEY}}
  LIQUIBASE_COMMAND_USERNAME: ${{secrets.LIQUIBASE_COMMAND_USERNAME}}
  LIQUIBASE_COMMAND_PASSWORD: ${{secrets.LIQUIBASE_COMMAND_PASSWORD}}
  ##
  ## The database URL is set at the Environment level
  LIQUIBASE_COMMAND_URL: ${{secrets.LIQUIBASE_COMMAND_URL}}
  ## 
  LIQUIBASE_COMMAND_CHANGELOG_FILE: ./changelogs/dbchangelog.xml
  ## LIQUIBASE_LOG_LEVEL: FINE


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Build_Job:
    runs-on: ubuntu-latest
    environment: 
      name: DEV

    steps:
    - uses: actions/checkout@v3
    
    - name: Validate changelogs
      uses: docker://liquibase/liquibase
      with:
        args: validate
        
    - name: Run Quality Checks
      uses: docker://liquibase/liquibase
      with:
        args: checks run
        
    - name: Review pending SQL changes
      uses: docker://liquibase/liquibase
      with:
        args: status --verbose --log-level=info
    
#    - name: Deploy SQL changes to DEV
#      uses: docker://liquibase/liquibase
#      with:
#        args: update
